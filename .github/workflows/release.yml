name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary-suffix: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary-suffix: ".exe"
          - os: macos-latest
            target: x86_64-apple-darwin
            binary-suffix: ""

    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        target: ${{ matrix.target }}
    - uses: Swatinem/rust-cache@v2

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Package binary
      shell: bash
      run: |
        mkdir -p artifacts
        cp target/${{ matrix.target }}/release/secretscanner${{ matrix.binary-suffix }} artifacts/
        tar -czf secretscanner-${{ matrix.target }}.tar.gz -C artifacts .

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: secretscanner-${{ matrix.target }}
        path: secretscanner-${{ matrix.target }}.tar.gz

  create-release:
    name: Create Release
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download artifacts
      uses: actions/download-artifact@v4
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          secretscanner-*/secretscanner-*.tar.gz
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  publish-crate:
    name: Publish to crates.io
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    
    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}